#! /usr/bin/python3

# convert a binary to a C array header file with the same file type

import sys

perline = 10

def convert(filename):
    with open(filename, 'rb') as input:
        contents = bytearray(input.read())

    newfilename =filename.split('.')[0] 
    newtitle = newfilename.split('/')[-1]
    print(newtitle)
    newfilename +=  '.h'
    with open(newfilename, 'w') as output:
        print('// Autogenerated file from ' + filename, file = output)
        print('\n\n', file = output)
        print('#ifndef _' + newtitle + '_h_', file = output)
        print('#define _' + newtitle + '_h_\n\n', file = output)
        print('const unsigned char ' + newtitle + '[] = {', end = '\n\t', file = output)

        for i,b in enumerate(contents):
            ending = '' if (i + 1) % perline != 0 else '\n        '
            print("0x" + format(b, '02x'), end='', file=output)
            if i != len(contents) - 1:
                print(', ', end = ending,  file = output)

        print('\n};', file = output)
        print('const int ' + newtitle + '_size = ' + str(len(contents)) + ';', file = output)
        print('#endif', file = output)
    


def main():
    if len(sys.argv) !=  2:
        print("Usage: python3 binheader.py <fileName>")
    else:
        convert(sys.argv[1])
    
if __name__=='__main__':
    main()
